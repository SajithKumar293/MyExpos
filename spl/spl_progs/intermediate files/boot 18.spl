loadi(65,7);   // init/login
loadi(66,8);

loadi(59,3);   // inode + user table
loadi(60,4);

loadi(63,13);  //library
loadi(64,14);

loadi(22,35);  // int 10
loadi(23,36);

loadi(2, 15);  //exception handler
loadi(3, 16);

loadi(4, 17);  //timer interrupt
loadi(5, 18);

loadi(6, 19);  //disk interrupt
loadi(7, 20);

loadi(16,29);  // int 7
loadi(17,30);

loadi(14,27);  // int 6
loadi(15,28);

loadi(20,33);  // int 9
loadi(21,34);

loadi(8,21);  // console_int
loadi(9,22);

loadi(50,63);  // scheduler
loadi(51,64);

loadi(40,53);  // terminal_handler/ Mod_0
loadi(41,54);

loadi(42,55);  // proc_manager/ Mod_1
loadi(43,56);

loadi(44,57);  // mem_manager/ Mod_2
loadi(45,58);

loadi(48,61);  // dev-manager/ Mod_4
loadi(49,62);

[TERMINAL_STATUS_TABLE+0]=0;
[DISK_STATUS_TABLE+0]=0;

PTBR = PAGE_TABLE_BASE + 20;
[PTBR+0]  = 63;         //LIBRARY
[PTBR+1]  = "0100";
[PTBR+2]  = 64;
[PTBR+3]  = "0100";
[PTBR+4]  = 78;         //heap
[PTBR+5]  = "0110";
[PTBR+6]  = 79;
[PTBR+7]  = "0110";
[PTBR+8]  = 65;         //code
[PTBR+9]  = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15]  = "0000";
[PTBR+16] = 76;        //stack
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";
PTLR = 10;

[PROCESS_TABLE +17] = 1;
[PROCESS_TABLE +20] = CREATED;
[PROCESS_TABLE +27] = 80;
[PROCESS_TABLE +28] = 0;
[PROCESS_TABLE +29] = 8*512;
[PROCESS_TABLE +30] = PAGE_TABLE_BASE+20;
[PROCESS_TABLE +31] = 10;

[76*512] = [65 * 512 + 1];    //entry point value from header to the top of user stack

alias counter R14;
counter = ((PTBR-PAGE_TABLE_BASE)/20)+1;
while(counter < MAX_PROC_NUM)do
      [PROCESS_TABLE+(counter*16)+4] = TERMINATED;
      counter = counter +1;
endwhile;
 
counter=0;
while(counter<76) do 
     [MEMORY_FREE_LIST+counter]=1;
counter =counter+1;
endwhile;
[MEMORY_FREE_LIST+0]=1;

counter=0;
while(counter<(PTBR-PAGE_TABLE_BASE)) do
     if([PAGE_TABLE_BASE+2*counter]>0) then
         [MEMORY_FREE_LIST+[PAGE_TABLE_BASE+2*counter]]=1;
     else
         [MEMORY_FREE_LIST+[PAGE_TABLE_BASE+2*counter]]=0;
     endif;
     counter=counter+1;
endwhile;

alias freepages R15;
freepages=0;
counter=0;
[MEMORY_FREE_LIST+[PROCESS_TABLE+27]]=1;
while(counter<128) do
   if([MEMORY_FREE_LIST+counter]==0) then
      freepages=freepages+1;
   endif;
   counter=counter+1;
endwhile;

[SYSTEM_STATUS_TABLE+2]=freepages;
[SYSTEM_STATUS_TABLE+3]=0;
[TERMINAL_STATUS_TABLE+0]=0;
[DISK_STATUS_TABLE+0]=0;
breakpoint;
return;

