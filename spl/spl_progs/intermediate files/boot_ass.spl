loadi(65,7);   // init/login
loadi(66,8);

loadi(63,13);  //library
loadi(64,14);

loadi(22,35);  // int 10
loadi(23,36);

loadi(2, 15);  //exception handler
loadi(3, 16);

loadi(4, 17);  //timer interrupt
loadi(5, 18);

loadi(16,29);  // int 7
loadi(17,30);

loadi(50,63);  // scheduler
loadi(51,64);

loadi(88,69);  // even prog

PTBR = PAGE_TABLE_BASE + 20;
[PTBR+0]  = 63;         //LIBRARY
[PTBR+1]  = "0100";
[PTBR+2]  = 64;
[PTBR+3]  = "0100";
[PTBR+4]  = 78;         //heap
[PTBR+5]  = "0110";
[PTBR+6]  = 79;
[PTBR+7]  = "0110";
[PTBR+8]  = 65;         //code
[PTBR+9]  = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+5]  = "0000";
[PTBR+16] = 76;        //stack
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";
PTLR = 10;

[PROCESS_TABLE +17] = 1;
[PROCESS_TABLE +20] = CREATED;
[PROCESS_TABLE +27] = 80;
[PROCESS_TABLE +28] = 0;
[PROCESS_TABLE +29] = 8*512;
[PROCESS_TABLE +30] = PAGE_TABLE_BASE+20;
[PROCESS_TABLE +31] = 10;

[76*512] = [65 * 512 + 1];    //entry point value from header to the top of user stack

PTBR = PAGE_TABLE_BASE + 40;
[PTBR+0]  = 63;         //LIBRARY
[PTBR+1]  = "0100";
[PTBR+2]  = 64;
[PTBR+3]  = "0100";
[PTBR+4]  = -1;         //heap
[PTBR+5]  = "0000";
[PTBR+6]  = -1;
[PTBR+7]  = "0000";
[PTBR+8]  = 88;         //code
[PTBR+9]  = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+5]  = "0000";
[PTBR+16] = 85;        //stack
[PTBR+17] = "0110";
[PTBR+18] = 86;
[PTBR+19] = "0110";
PTLR = 10;

[PROCESS_TABLE +33] = 2;
[PROCESS_TABLE +36] = CREATED;
[PROCESS_TABLE +43] = 87;
[PROCESS_TABLE +44] = 0;
[PROCESS_TABLE +45] = 8*512;
[PROCESS_TABLE +46] = PAGE_TABLE_BASE+40;
[PROCESS_TABLE +47] = 10;
breakpoint;
[85*512] = [88 * 512 + 1];    //entry point value from header to the top of user stack
return;